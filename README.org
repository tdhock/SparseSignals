* Motivation

For piecewise constant signals with $M$ or $N$ segments defined on $1,
..., L$, ($L >> M >= N$), arithmetic operations can be efficiently
computed in $O(M + N)$ rather than $O(L)$ space and time, using the
fast C code included in this package.

#+BEGIN_SRC R
  install.packages("devtools")
  library(devtools)
  install_github("SparseSignals", "tdhock")
  library(SparseSignals)
  ## adding two non-overlapping 1-segment signals gives a signal with
  ## 2 segments.
  x <- SparseSignal(1, 2, 5.5)
  x + SparseSignal(4, 10, 3.8) # 2 rows.
  ## subtracting a SparseSignal from itself gives an empty signal.
  none <- x - x
  str(none)
  ## a more complicated example.
  x <- SparseSignal(c(10L, 12L, 14L),
                    c(11L, 13L, 16L),
                    c(  1,   2,   3))
  y <- SparseSignal(c(10L, 12L, 15L),
                    c(11L, 13L, 17L),
                    c( 1, -2,    4))
  s <- x + y
  print(s)
  ## Visualize the two piecewise constant signals and their sums.
  library(ggplot2)
  library(grid)
  all.signals <-
    rbind(data.frame(x, what="x"),
          data.frame(y, what="y"),
          data.frame(s, what="sum"))
  bases <- data.frame(position=1:20, base=rep(c("A","T","C","G"), l=20))
  ggplot()+
    geom_text(aes((first+after)/2-1/2, value, label=value,
                  vjust=ifelse(value>0, 1, 0)), data=all.signals)+
    geom_text(aes(position, 0, label=base), data=bases)+
    geom_segment(aes(first-1/2, value, 
                     xend=after-1/2, yend=value), data=all.signals)+
    theme_bw()+
    theme(panel.margin=unit(0,"cm"))+
    facet_grid(what~.)
  ## you can also just add vectors, but they need to be length 1 or
  ## the number of segments.
  x + 1000
  x + c(1, 200, 3000)
#+END_SRC
